FROM node:22-alpine3.19 AS base
# Install dependencies only when needed

FROM base AS deps
# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Install dependencies
COPY package*.json ./
RUN npm ci

FROM base AS dev

# ARG UID
# ARG GID

WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY ./src .

EXPOSE 3000

CMD ["npm", "run", "dev"]

#
# The user and group ID values are set in
# the .env file used by docker-compose.yml
#
# Create a new user group
# RUN addgroup -S -g ${GID:-1010} appgroup

#
# Modify the node user (built into the node alpine image) to have your group and user id.
# Note that we fall back to the default user id of 1010 and group id of 1010. These values
# are not you but stop the build from failing if the build parameters are incorrect.
# It is also easy to spot the failure because files generated by the build are owned by
# 1010:1010.
#
# RUN deluser node
# RUN adduser -u ${UID:-1010} node -G appgroup -D

# USER node 

# # Rebuild the source code only when needed
# FROM base AS builder
# WORKDIR /app
# COPY --from=deps /app/node_modules ./node_modules
# COPY WebApp/src .

# # Next.js collects completely anonymous telemetry data about general usage.
# # Learn more here: https://nextjs.org/telemetry
# # disable telemetry during the build.
# ENV NEXT_TELEMETRY_DISABLED=1
# # If using npm comment out above and use below instead
# RUN npm run build

# # Production image, copy all the files and run next
# FROM base AS runner
# WORKDIR /app

# # disable telemetry during runtime.
# ENV NEXT_TELEMETRY_DISABLED=1

# RUN addgroup --system --gid 1010 nodejs
# RUN adduser --system --uid 1010 nextjs

# COPY --from=builder /app/public ./public

# # Automatically leverage output traces to reduce image size
# # https://nextjs.org/docs/advanced-features/output-file-tracing
# COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
# COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

# USER nextjs
# CMD ["node", "server.js"]
